/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.38
 * Generated at: 2023-02-14 06:53:22 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.kosa.myapp3.common.*;
import com.kosa.myapp3.board.*;

public final class board_005fwrite_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/WEB-INF/views/board/../include/nav.jsp", Long.valueOf(1675914435232L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("com.kosa.myapp3.common");
    _jspx_imports_packages.add("com.kosa.myapp3.board");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("   <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.6.1/jquery.min.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");

String mode = StringUtil.nullToValue(request.getParameter("mode"), "insert");
String seq = StringUtil.nullToValue(request.getParameter("seq"), "-1");

	// 글수정 : 수정할 글의 정보(수정글 DTO)
	// 답글 달기 : 원본글의 정보(원글 DTO)
	// 새 글 쓰기 : 아무것도 필요 없음(빈 DTO)
// 이렇게 세 DTO를 생성하고 어떤 화면에서든 DTO를 호출하게 만들어
// 화면에 따라 출력시킴(if문보다 간편)
BoardDTO dto = (BoardDTO)request.getAttribute("boardDTO");

      out.write("\r\n");
      out.write("<form name=\"myform\" id=\"myform\">\r\n");
      out.write("\t<input type=\"hidden\" name=\"mode\" id=\"mode\" value=\"");
      out.print(mode);
      out.write("\">\r\n");
      out.write("\t<input type=\"hidden\" name=\"seq\" id=\"seq\" value=\"");
      out.print(seq);
      out.write("\">\r\n");
      out.write("\t<input type=\"hidden\" name=\"userid\" id=\"userid\" value=\"");
      out.print(userid);
      out.write("\">\r\n");
      out.write("\t<!-- mode : 이 페이지에서 처리할 작업이 글쓰기, 글수정, 답글 달기 중 어느 모드인지 지정하는 변수\r\n");
      out.write("\t\t seq : 부모글의 seq(=group_id)\r\n");
      out.write("\tvalue값은 만약 값이 넘어오지 않을 때 위 StringUtil 객체에 담긴 값을 받아온 값을 넣겠다는 뜻 -->\r\n");
      out.write("\r\n");
      out.write("<!-- \"UTF-8\"은 대소문자 구분 -->\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<!-- 메뉴 -->\r\n");
      out.write("<nav class=\"navbar navbar-expand-sm bg-dark navbar-dark\">\r\n");
      out.write("  <div class=\"container-fluid\">\r\n");
      out.write("    <a class=\"navbar-brand\" href=\"");
      out.print(request.getContextPath());
      out.write("\">\r\n");
      out.write("      <img src=\"C:\\web_programming\\spring_workspace1\\myapp3\\src\\main\\webapp\\homeimage\\logo.png\" alt=\"Avatar Logo\" \r\n");
      out.write("         style=\"width:40px;\" class=\"rounded-pill\"> \r\n");
      out.write("    </a>\r\n");
      out.write("    \r\n");
      out.write("    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapsibleNavbar\">\r\n");
      out.write("      <span class=\"navbar-toggler-icon\"></span>\r\n");
      out.write("    </button>\r\n");
      out.write("    <div class=\"collapse navbar-collapse\" id=\"collapsibleNavbar\">\r\n");
      out.write("      <ul class=\"navbar-nav\">\r\n");
      out.write("        <li class=\"nav-item\">\r\n");
      out.write("          <a class=\"nav-link\" href=\"#\">Link</a>\r\n");
      out.write("        </li>\r\n");
      out.write("        <li class=\"nav-item\">\r\n");
      out.write("          <a class=\"nav-link\" href=\"#\">Link</a>\r\n");
      out.write("        </li>\r\n");
      out.write("        <li class=\"nav-item\">\r\n");
      out.write("          <a class=\"nav-link\" href=\"#\">Link</a>\r\n");
      out.write("        </li>  \r\n");
      out.write("        <li class=\"nav-item dropdown\">\r\n");
      out.write("          <a class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\">Dropdown</a>\r\n");
      out.write("          <ul class=\"dropdown-menu\">\r\n");
      out.write("            <li><a class=\"dropdown-item\" href=\"#\">Link</a></li>\r\n");
      out.write("            <li><a class=\"dropdown-item\" href=\"#\">Another link</a></li>\r\n");
      out.write("            <li><a class=\"dropdown-item\" href=\"#\">A third link</a></li>\r\n");
      out.write("          </ul>\r\n");
      out.write("        </li>\r\n");
      out.write("      </ul>\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("</nav>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("<div class=\"container mt-3\">\r\n");
      out.write("  <h3>새 글 쓰기</h3>\r\n");
      out.write("  \r\n");
      out.write("   <table class=\"table\">\r\n");
      out.write("   \t<colgroup>\r\n");
      out.write("   \t\t<col width=\"30%\">\r\n");
      out.write("   \t\t<col width=\"*\">\r\n");
      out.write("   \t</colgroup>\r\n");
      out.write("    <tbody>\r\n");
      out.write("      <tr>\r\n");
      out.write("        <th>제목</td>\r\n");
      out.write("        <td>\r\n");
      out.write("        \t <div class=\"input-group\">\r\n");
      out.write("\t\t\t    <input type=\"text\" class=\"form-control\" placeholder=\"제목을 입력하세요\"\r\n");
      out.write("\t\t\t    name=\"title\" id=\"title\" value=\"");
      out.print(dto.getTitle());
      out.write("\">\r\n");
      out.write("\t\t\t </div>\r\n");
      out.write("        </td>\r\n");
      out.write("      </tr>\r\n");
      out.write("      <tr>\r\n");
      out.write("        <th>작성자</td>\r\n");
      out.write("        <td>\r\n");
      out.write("        \t <div class=\"input-group\">\r\n");
      out.write("\t\t\t    <input type=\"text\" class=\"form-control\" placeholder=\"이름을 입력하세요\"\r\n");
      out.write("\t\t\t    name=\"userid\" id=\"userid\" value=\"");
      out.print(session.getAttribute("userid"));
      out.write("\">\r\n");
      out.write("\t\t\t </div>\r\n");
      out.write("        </td>\r\n");
      out.write("      </tr>\r\n");
      out.write("      <tr>\r\n");
      out.write("        <th>내용</td>\r\n");
      out.write("        <td>\r\n");
      out.write("        \t <div class=\"input-group\">\r\n");
      out.write("\t\t\t    <textarea class=\"form-control\" placeholder=\"내용 입력하세요\"\r\n");
      out.write("\t\t\t    name=\"contents\" id=\"contents\" rows=\"5\">");
      out.print(dto.getContents());
      out.write("</textarea>\r\n");
      out.write("\t\t\t    <!--textarea는 value로 주지 않고 가운데에 값 입력-->\r\n");
      out.write("\t\t\t </div>\r\n");
      out.write("        </td>\r\n");
      out.write("      </tr>\r\n");
      out.write("      <tr>\r\n");
      out.write("        <th>첨부파일1</td>\r\n");
      out.write("        <td>\r\n");
      out.write("        ");
if(!mode.equals("modify")){ 
      out.write("\r\n");
      out.write("        \t <div class=\"input-group\">\r\n");
      out.write("\t\t\t    <input class=\"form-control\" placeholder=\"파일을 첨부하세요\"\r\n");
      out.write("\t\t\t    type=\"file\" name=\"file1\" id=\"file1\">\r\n");
      out.write("\t\t\t </div>\r\n");
      out.write("\t\t");
}else{ 
      out.write("\r\n");
      out.write("        \t <div class=\"input-group\">\r\n");
      out.write("\t\t\t    <input type=\"file\" class=\"form-control\" placeholder=\"파일을 첨부하세요\" name=\"file1\" id=\"file1\" style=\"display:none\"/>\r\n");
      out.write("\t\t\t    <input type=\"checkbox\" id=\"del1\"\t onclick=\"goChange('1')\" value=\"1\"/>\r\n");
      out.write("\t\t\t    <input type=\"text\" name=\"old_name\" id=\"old_name1\" value=\"");
      out.print(dto.getFilename1() );
      out.write("\"\t/>\r\n");
      out.write("\t\t\t </div>\r\n");
      out.write("\t\t ");
} 
      out.write("\r\n");
      out.write("        </td>\r\n");
      out.write("      </tr>\r\n");
      out.write("      <tr>\r\n");
      out.write("        <th>첨부파일2</td>\r\n");
      out.write("        <td>\r\n");
      out.write("        \t ");
if(!mode.equals("modify")){ 
      out.write("\r\n");
      out.write("        \t <div class=\"input-group\">\r\n");
      out.write("\t\t\t    <input class=\"form-control\" placeholder=\"파일을 첨부하세요\"\r\n");
      out.write("\t\t\t    type=\"file\" name=\"file2\" id=\"file2\">\r\n");
      out.write("\t\t\t </div>\r\n");
      out.write("\t\t");
}else{ 
      out.write("\r\n");
      out.write("        \t <div class=\"input-group\">\r\n");
      out.write("\t\t\t    <input type=\"file\" class=\"form-control\" placeholder=\"파일을 첨부하세요\" name=\"file2\" id=\"file2\" style=\"display:none\"/>\r\n");
      out.write("\t\t\t    <input type=\"checkbox\" id=\"del2\" onclick=\"goChange('2')\" value=\"2\"/>\r\n");
      out.write("\t\t\t    <input type=\"text\" name=\"old_name\" id=\"old_name2\" value=\"");
      out.print(dto.getFilename2() );
      out.write("\"\t/>\r\n");
      out.write("\t\t\t </div>\r\n");
      out.write("\t\t ");
} 
      out.write("\r\n");
      out.write("        </td>\r\n");
      out.write("      </tr>\r\n");
      out.write("      <tr>\r\n");
      out.write("        <th>첨부파일3</td>\r\n");
      out.write("        <td>\r\n");
      out.write("        \t ");
if(!mode.equals("modify")){ 
      out.write("\r\n");
      out.write("        \t <div class=\"input-group\">\r\n");
      out.write("\t\t\t    <input class=\"form-control\" placeholder=\"파일을 첨부하세요\"\r\n");
      out.write("\t\t\t    type=\"file\" name=\"file3\" id=\"file3\">\r\n");
      out.write("\t\t\t </div>\r\n");
      out.write("\t\t");
}else{ 
      out.write("\r\n");
      out.write("        \t <div class=\"input-group\">\r\n");
      out.write("\t\t\t    <input type=\"file\" class=\"form-control\" placeholder=\"파일을 첨부하세요\" name=\"file3\" id=\"file3\" style=\"display:none\"/>\r\n");
      out.write("\t\t\t    <input type=\"checkbox\" id=\"del3\" onclick=\"goChange('3')\" value=\"3\"/>\r\n");
      out.write("\t\t\t    <input type=\"text\" name=\"old_name\" id=\"old_name3\" value=\"");
      out.print(dto.getFilename3() );
      out.write("\"\t/>\r\n");
      out.write("\t\t\t </div>\r\n");
      out.write("\t\t ");
} 
      out.write("\r\n");
      out.write("        </td>\r\n");
      out.write("      </tr>\r\n");
      out.write("\r\n");
      out.write("    </tbody>\r\n");
      out.write("  </table>\r\n");
      out.write(" </div>\r\n");
      out.write("\r\n");
      out.write(" <div class=\"container\" style=\"text-align:right\">\r\n");
      out.write("\t<button type=\"button\" class=\"btn btn-primary\" id=\"btnSave\">글쓰기</button>\r\n");
      out.write(" </div>\r\n");
      out.write("\r\n");
      out.write("</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("$(()=>{\r\n");
      out.write("\t// goSave() : 메소드 호출결과를 전달\r\n");
      out.write("\t$(\"#btnSave\").click(goSave); // 메소드 주소만 전달\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("function goChange(id){\r\n");
      out.write("\t//alert(id);\r\n");
      out.write("\tif(document.getElementById(\"del\"+id).checked){\r\n");
      out.write("\t\tdocument.getElementById(\"file\"+id).style.display=\"block\";\r\n");
      out.write("\t}else{\r\n");
      out.write("\t\tdocument.getElementById(\"file\"+id).style.display=\"none\";\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function goSave(){\r\n");
      out.write("\t// 자바스크립트 ajax로 파일을 전송할 때 FormData(form 객체) 메소드를 이용해 form에 있는\r\n");
      out.write("\t// 데이터들을 직렬화한다\r\n");
      out.write("\t// document.폼이름\r\n");
      out.write("\t// jQuery의 경우 $(\"#폼 아이디\")[0]\t- 반드시 인덱스값을 명시해줘야 한다(form 객체가 배열이라)\r\n");
      out.write("\tlet frmData = new FormData(document.myform);\r\n");
      out.write("\tconsole.log(frmData);\r\n");
      out.write("\tfor(key of frmData.keys()){\r\n");
      out.write("\t\tconsole.log(key);\t// 키 출력\r\n");
      out.write("\t\tconsole.log(frmData.get(key));\t// 값 출력\r\n");
      out.write("\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\tlet file=frmData.get(\"file1\");\r\n");
      out.write("\tconsole.log(file.type);\r\n");
      out.write("\tconsole.log(file.name);\r\n");
      out.write("\t\r\n");
      out.write("\t// 여기서 save할 것이 원글인지, 답글인지를 정할 수 있다\r\n");
      out.write("\tif($(\"#mode\").val()==\"insert\")\r\n");
      out.write("\t\turl = \"");
      out.print(request.getContextPath());
      out.write("/board/save\";\r\n");
      out.write("\telse if($(\"#mode\").val()==\"reply\")\r\n");
      out.write("\t\turl = \"");
      out.print(request.getContextPath() );
      out.write("/board/reply_save\";\r\n");
      out.write("\telse\r\n");
      out.write("\t\turl = \"");
      out.print(request.getContextPath() );
      out.write("/board/modify_save\";\r\n");
      out.write("\t\r\n");
      out.write("\t\tconsole.log($(\"#mode\").val(), url);\r\n");
      out.write("\t\tif($(\"#mode\").val()==\"modify\"){\r\n");
      out.write("\t\t\tfor(i=1; i<=3; i++){\r\n");
      out.write("\t\t\t\t// check되지 않은 경우만 추가\r\n");
      out.write("\t\t\t\tif(!document.getElementById(\"del\"+i).checked)\r\n");
      out.write("\t\t\t\t\tfrmData.append(\"del\", \"\");\r\n");
      out.write("\t\t\t\telse\r\n");
      out.write("\t\t\t\t\tfrmData.append(\"del\", $(\"#del\"+i).val());\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\r\n");
      out.write("\t $.ajax({\r\n");
      out.write("\t\turl:url,\r\n");
      out.write("\t\tdata:frmData,\r\n");
      out.write("\t\tprocessData:false,\t// 여기서\r\n");
      out.write("\t\tcontentType:false,\r\n");
      out.write("\t\tencType:\"multipart/form-data\",\t// 여기까지 이 세개는 의례적으로 필요함\r\n");
      out.write("\t\ttimeout:600000,\r\n");
      out.write("\t\tdataType:\"JSON\",\r\n");
      out.write("\t\ttype:\"POST\"\t// 파일 전송방식은 반드시 POST\r\n");
      out.write("\t})\r\n");
      out.write("\t.done((res)=>{\r\n");
      out.write("\t\tlocation.href=\"");
      out.print(request.getContextPath());
      out.write("/board/list\";\r\n");
      out.write("\t\talert(\"등록 완료\");\r\n");
      out.write("\t\tconsole.log(res);\r\n");
      out.write("\t})\r\n");
      out.write("\t.fail((res, status, error)=>{\r\n");
      out.write("\t\tconsole.log(status);\r\n");
      out.write("\t\tconsole.log(error);\r\n");
      out.write("\t})\r\n");
      out.write("\t\t\r\n");
      out.write("}\r\n");
      out.write("\t\r\n");
      out.write("\t");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
