/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.38
 * Generated at: 2023-02-13 02:35:59 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.kosa.myapp3.board.*;
import com.kosa.myapp3.comment.*;
import com.kosa.myapp3.common.*;

public final class board_005fview_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/WEB-INF/views/board/../include/nav.jsp", Long.valueOf(1675914435232L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("com.kosa.myapp3.common");
    _jspx_imports_packages.add("com.kosa.myapp3.board");
    _jspx_imports_packages.add("com.kosa.myapp3.comment");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title></title>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("<link\r\n");
      out.write("\thref=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css\"\r\n");
      out.write("\trel=\"stylesheet\">\r\n");
      out.write("<script\r\n");
      out.write("\tsrc=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("     <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.6.1/jquery.min.js\"></script>\r\n");
      out.write("   \r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\t");
      out.write("\r\n");
      out.write("<!-- \"UTF-8\"은 대소문자 구분 -->\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<!-- 메뉴 -->\r\n");
      out.write("<nav class=\"navbar navbar-expand-sm bg-dark navbar-dark\">\r\n");
      out.write("  <div class=\"container-fluid\">\r\n");
      out.write("    <a class=\"navbar-brand\" href=\"");
      out.print(request.getContextPath());
      out.write("\">\r\n");
      out.write("      <img src=\"C:\\web_programming\\spring_workspace1\\myapp3\\src\\main\\webapp\\homeimage\\logo.png\" alt=\"Avatar Logo\" \r\n");
      out.write("         style=\"width:40px;\" class=\"rounded-pill\"> \r\n");
      out.write("    </a>\r\n");
      out.write("    \r\n");
      out.write("    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapsibleNavbar\">\r\n");
      out.write("      <span class=\"navbar-toggler-icon\"></span>\r\n");
      out.write("    </button>\r\n");
      out.write("    <div class=\"collapse navbar-collapse\" id=\"collapsibleNavbar\">\r\n");
      out.write("      <ul class=\"navbar-nav\">\r\n");
      out.write("        <li class=\"nav-item\">\r\n");
      out.write("          <a class=\"nav-link\" href=\"#\">Link</a>\r\n");
      out.write("        </li>\r\n");
      out.write("        <li class=\"nav-item\">\r\n");
      out.write("          <a class=\"nav-link\" href=\"#\">Link</a>\r\n");
      out.write("        </li>\r\n");
      out.write("        <li class=\"nav-item\">\r\n");
      out.write("          <a class=\"nav-link\" href=\"#\">Link</a>\r\n");
      out.write("        </li>  \r\n");
      out.write("        <li class=\"nav-item dropdown\">\r\n");
      out.write("          <a class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\">Dropdown</a>\r\n");
      out.write("          <ul class=\"dropdown-menu\">\r\n");
      out.write("            <li><a class=\"dropdown-item\" href=\"#\">Link</a></li>\r\n");
      out.write("            <li><a class=\"dropdown-item\" href=\"#\">Another link</a></li>\r\n");
      out.write("            <li><a class=\"dropdown-item\" href=\"#\">A third link</a></li>\r\n");
      out.write("          </ul>\r\n");
      out.write("        </li>\r\n");
      out.write("      </ul>\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("</nav>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write('\r');
      out.write('\n');
      out.write('	');

	String pg=StringUtil.nullToValue(request.getParameter("pg"), "0");
	String seq=StringUtil.nullToValue(request.getParameter("seq"), "");
	BoardDTO dto = (BoardDTO) request.getAttribute("dto");
	
      out.write("\r\n");
      out.write("\t<form name=\"myform\" id=\"myform\">\r\n");
      out.write("\t\t<input type=\"hidden\" name=\"board_seq\" id=\"board_seq\" value=\"");
      out.print(seq );
      out.write("\">\r\n");
      out.write("\t\t<input type=\"hidden\" name=\"pg\" id=\"pg\" value=\"");
      out.print(pg);
      out.write("\">\r\n");
      out.write("\t\t<input type=\"hidden\" name=\"seq\" id=\"seq\" value=\"");
      out.print(seq);
      out.write("\">\r\n");
      out.write("\t\t<input type=\"hidden\" name=\"userid\" id=\"userid\" value=\"test1\">\r\n");
      out.write("\t\t<input type=\"hidden\" name=\"mode\" id=\"mode\">\r\n");
      out.write("\t\t<input type=\"hidden\" name=\"group_id\" id=\"group_id\" value=\"");
      out.print(dto.getGroup_id() );
      out.write("\">\r\n");
      out.write("\t\t<input type=\"hidden\" name=\"depth\" id=\"depth\" value=\"");
      out.print(dto.getDepth());
      out.write("\">\r\n");
      out.write("\t\t<input type=\"hidden\" name=\"g_level\" id=\"g_level\" value=\"");
      out.print(dto.getG_level());
      out.write("\">\r\n");
      out.write("\t\t<!-- 여기서 mode값을 write로 넘김 -->\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<div class=\"container mt-3\">\r\n");
      out.write("\t\t\t<h3></h3>\r\n");
      out.write("\t\t\t<p></p>\r\n");
      out.write("\t\t\t<table class=\"table\">\r\n");
      out.write("\t\t\t\t<colgroup>\r\n");
      out.write("\t\t\t\t\t<col width=\"16.6%\">\r\n");
      out.write("\t\t\t\t\t<col width=\"16.6%\">\r\n");
      out.write("\t\t\t\t\t<col width=\"16.6%\">\r\n");
      out.write("\t\t\t\t\t<col width=\"16.6%\">\r\n");
      out.write("\t\t\t\t\t<col width=\"16.6%\">\r\n");
      out.write("\t\t\t\t\t<col width=\"16.6%\">\r\n");
      out.write("\t\t\t\t</colgroup>\r\n");
      out.write("\t\t\t\t<tbody>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<th>제목\r\n");
      out.write("\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t<td colspan=\"5\">");
      out.print(dto.getTitle());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<th>작성자\r\n");
      out.write("\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t<td>");
      out.print(dto.getUserid());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t<th>작성일\r\n");
      out.write("\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t<td>");
      out.print(dto.getRegdate());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t<th>조회수\r\n");
      out.write("\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t<td>");
      out.print(dto.getHit());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<th>파일1</th>\r\n");
      out.write("\t\t\t\t\t\t<td><a href=\"");
      out.print(request.getContextPath() );
      out.write("/download?path=board&filename=");
      out.print(dto.getFilename1() );
      out.write("\" class=\"btn\">");
      out.print(dto.getFilename1());
      out.write("</a></td>\r\n");
      out.write("\t\t\t\t\t\t<th>파일2</th>\r\n");
      out.write("\t\t\t\t\t\t<td><a href=\"#\" class=\"btn\">");
      out.print(dto.getFilename2());
      out.write("</a></td>\r\n");
      out.write("\t\t\t\t\t\t<th>파일3</th>\r\n");
      out.write("\t\t\t\t\t\t<td><a href=\"#\" class=\"btn\">");
      out.print(dto.getFilename3());
      out.write("</a></td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<th colspan=\"6\">내용</th>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td colspan=\"6\" style=\"word-break: break-all\">");
      out.print(dto.getContents().replaceAll("\n", "<br/>"));
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t</tbody>\r\n");
      out.write("\t\t\t\t<tbody>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td colspan=\"6\"><img style=\"width:1024px\" src=");
      out.print(request.getContextPath());
      out.write("/upload/board/");
      out.print(dto.getFilename1());
      out.write("></td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t</tbody>\r\n");
      out.write("\t\t\t</table>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"container\" style=\"text-align:right\">\r\n");
      out.write("\t<button type=\"button\" class=\"btn btn-primary\" id=\"btnReply\">답글</button>&nbsp;&nbsp;\r\n");
      out.write("\t<button type=\"button\" class=\"btn btn-primary\" id=\"btnModify\">글수정</button>&nbsp;&nbsp;\r\n");
      out.write("\t<button type=\"button\" class=\"btn btn-primary\" id=\"btnDelete\">글삭제</button>&nbsp;&nbsp;\r\n");
      out.write("\t<button type=\"button\" class=\"btn btn-primary\" id=\"btnList\">글목록</button>\r\n");
      out.write(" </div>\r\n");
      out.write(" \r\n");
      out.write(" <!-- 댓글창 -->\r\n");
      out.write(" <div class=\"container mt-3\">\r\n");
      out.write(" <!-- 댓글 입력창 -->\r\n");
      out.write(" <table class=\"table\">\r\n");
      out.write(" \t<tbody>\r\n");
      out.write(" \t\t<tr>\r\n");
      out.write(" \t\t\t<td>\r\n");
      out.write(" \t\t\t\t<div class=\"input-group\">\r\n");
      out.write(" \t\t\t\t<!-- 직렬화할 때는 id값이 아니라 name값으로 접근한다 -> name을 주자! -->\r\n");
      out.write(" \t\t\t\t\t<textarea type=\"text\" id=\"comments\" class=\"form-control\" rows=\"4\" name=\"comments\"></textarea>\r\n");
      out.write(" \t\t\t\t</div>\r\n");
      out.write("\t \t\t</td>\r\n");
      out.write(" \t\t\t<td stype=\"width:20%\">\r\n");
      out.write(" \t\t\t<button class=\"btn btn-primary\" type=\"button\" id=\"btnCmt\">댓글 작성</button>\r\n");
      out.write(" \t\t\t</td>\r\n");
      out.write(" \t\t</tr>\r\n");
      out.write(" \t</tbody>\r\n");
      out.write(" </table>\r\n");
      out.write(" <br/>\r\n");
      out.write(" \t\r\n");
      out.write(" \t<!-- 댓글 리스트 -->\r\n");
      out.write(" <table class=\"table\" id=\"cmtList\"> \r\n");
      out.write(" \t<tbody>\r\n");
      out.write(" \t\t<tr>\r\n");
      out.write(" \t\t\t<td style=\"width:100%\">\r\n");
      out.write(" \t\t\t작성자 : \r\n");
      out.write(" \t\t\t내용 : \r\n");
      out.write(" \t\t\t</td>\r\n");
      out.write(" \t\t</tr>\r\n");
      out.write(" \t</tbody>\r\n");
      out.write(" \r\n");
      out.write(" </table>\r\n");
      out.write(" </div>\r\n");
      out.write("   \r\n");
      out.write("\t</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("<script>\r\n");
      out.write("$(()=>{\r\n");
      out.write("\tload_comment();\r\n");
      out.write("\t\r\n");
      out.write("\t$(\"#btnReply\").click(()=>{\r\n");
      out.write("\t\t$(\"#mode\").val(\"reply\");\r\n");
      out.write("\t\t$(\"#myform\").prop(\"action\", \"");
      out.print(request.getContextPath());
      out.write("/board/reply\");\r\n");
      out.write("\t\t$(\"#myform\").submit();\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\t$(\"#btnModify\").click(()=>{\r\n");
      out.write("\t\t$(\"#mode\").val(\"modify\");\r\n");
      out.write("\t\t$(\"#myform\").prop(\"action\", \"");
      out.print(request.getContextPath());
      out.write("/board/modify\");\r\n");
      out.write("\t\t$(\"#myform\").submit();\t\r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("\t$(\"#btnList\").click(()=>{\r\n");
      out.write("\t\t$(\"#myform\").prop(\"action\", \"");
      out.print(request.getContextPath());
      out.write("/board/list\");\r\n");
      out.write("\t\t$(\"#myform\").submit();\r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("\t$(\"#btnDelete\").click(()=>{\r\n");
      out.write("\t\tlet param = $(\"#myform\").serialize();\r\n");
      out.write("\t\t// 직렬화 : url의 seq=4&group_id=3, 이런 식의 파라미터를 하나로 묶어주는 것\r\n");
      out.write("\t\t//\t\t\tmultipart(파일 전송 방식)가 아닐 때\r\n");
      out.write("\t\t// FormData : multipart일 때 사용\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\turl:\"");
      out.print(request.getContextPath());
      out.write("/board/delete\",\r\n");
      out.write("\t\t\tdata:param,\r\n");
      out.write("\t\t\tdataType:\"JSON\"\t\r\n");
      out.write("\t\t})\r\n");
      out.write("\t\t.done((res)=>{\r\n");
      out.write("\t\t\tif(res.result==\"success\"){\r\n");
      out.write("\t\t\t\talert(\"글이 삭제되었습니다.\");\r\n");
      out.write("\t\t\t\tlocation.href=\"");
      out.print(request.getContextPath());
      out.write("/board/list\";\r\n");
      out.write("\t\t\t}else{\r\n");
      out.write("\t\t\t\talert(\"글 삭제에 실패하였습니다.\");\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t})\r\n");
      out.write("\t\t.fail((res, status, error)=>{\r\n");
      out.write("\t\t\tconsole.log(status);\r\n");
      out.write("\t\t\tconsole.log(error);\r\n");
      out.write("\t\t});\r\n");
      out.write("\t})\r\n");
      out.write("\t\r\n");
      out.write("\t// 자바스크립트를 라이브러리화한 게 jQuery\r\n");
      out.write("\t// serialize는 jQuery가 만든 것\r\n");
      out.write("\t// 직렬화 : board_seq=12&comments=~~~~&userid=test 형식으로 파라미터를 하나로 가공해 주는 것\r\n");
      out.write("\t$(\"#btnCmt\").click(()=>{\r\n");
      out.write("\t\tlet param = $(\"#myform\").serialize();\r\n");
      out.write("\t\tconsole.log(param);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//data:{userid:\"nananananana\",board_seq:$(\"#board_seq\").val(),comments:$(\"#comments\").val()},\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\turl:\"");
      out.print(request.getContextPath());
      out.write("/comment/insert\",\r\n");
      out.write("\t\t\tdata:param,\r\n");
      out.write("\t\t\tdataType:\"JSON\"\r\n");
      out.write("\t\t})\r\n");
      out.write("\t\t.done((res)=>{\r\n");
      out.write("\t\t\tif(res.result==\"success\"){\r\n");
      out.write("\t\t\t\tlocation.href=\"");
      out.print(request.getContextPath());
      out.write("/board/view?seq=");
      out.print(seq);
      out.write("\";\r\n");
      out.write("\t\t\t}else{\r\n");
      out.write("\t\t\t\talert(\"실패@!\");\t\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t})\r\n");
      out.write("\t\t.fail((res, status, error)=>{\r\n");
      out.write("\t\t\tconsole.log(status);\r\n");
      out.write("\t\t\tconsole.log(error);\r\n");
      out.write("\t\t});\r\n");
      out.write("\t})\r\n");
      out.write("\t\r\n");
      out.write("})\r\n");
      out.write("\r\n");
      out.write("// comment 출력 함수 : comment정보를 읽어와서 table에 추가\r\n");
      out.write("function load_comment(){\r\n");
      out.write("\tlet board_seq=$(\"#board_seq\").val();\r\n");
      out.write("\t$.ajax({\r\n");
      out.write("\t\turl:\"");
      out.print(request.getContextPath());
      out.write("/comment/list\",\r\n");
      out.write("\t\tdata:{board_seq:board_seq},\r\n");
      out.write("\t\tdataType:\"JSON\"\r\n");
      out.write("\t})\r\n");
      out.write("\t.done((res)=>{\r\n");
      out.write("\t\tconsole.log(res);\r\n");
      out.write("\t\tdata = res.data;\r\n");
      out.write("\t\t// commentList = res.commentList;\r\n");
      out.write("\t\t// 기존에 들어가 있던 데이터는 미리 삭제해서 비워줌\r\n");
      out.write("\t\tfor(i=$(\"#cmtList>tbody>tr\").length; i>-1; i--){\r\n");
      out.write("\t\t\t$(\"#cmtList>tbody>tr:last\").remove();\t// 맨 마지막 요소부터 삭제\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tdata.forEach((item)=>{\t\t\r\n");
      out.write("\t\t\t$(\"#cmtList > tbody\").append(\"<tr><td>\" +item.userid+\"\t\" + item.comments + \"\t\" + item.regdate+\"</td></tr>\");\r\n");
      out.write("\t\t\t})\r\n");
      out.write("\t\t})\r\n");
      out.write("\t\t.fail((res, status, error)=>{\r\n");
      out.write("\t\t\tconsole.log(error);\r\n");
      out.write("\t\t})\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
