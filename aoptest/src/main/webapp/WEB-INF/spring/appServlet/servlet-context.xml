<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">
		

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<context:component-scan
		base-package="com.kosa.mycompany" />

	<!-- AOP를 위해 Service 객체 생성 : @Service를 쓰지 않고 xml에 직접 씀 -->
	<!-- 하지만 @Service 어노테이션을 ServiceImpl 클래스에 추가해주면 이 부분이 없어도 실행이 됨 -->
	<!-- <beans:bean id="sampleService"
		class="com.kosa.mycompany.SampleServiceImpl"></beans:bean> -->
		
	<beans:bean id="advice" class="com.kosa.mycompany.AdviceUsingXml"	/>
	<aop:config proxy-target-class="true">
		<aop:pointcut id="targetMethod" expression="execution(public * com.kosa.mycompany.*ServiceImpl.*(..))"	/>
		<!-- public : 메소드가 public 속성이어야 함
			* : 반환형태는 지정되지 않음(클래스여야 함)
			com.kosa.mycompany : 이 패키지 경로의 하위 클래스여야 함
		  	*ServiceImpl : 클래스명에 ServiceImpl이 포함되어 있어야 함
		  	*(..) : 모든 메소드들에 대해  -->
		<aop:aspect ref="advice">
		<!--around : 메소드 실행 전, 후 둘 다
			targetMethod : advice의 pointcut id인 targetMethod를 호출하겠다는 뜻  -->
		<aop:around pointcut-ref="targetMethod" method="aroundTargetMethod"	/>
		</aop:aspect>
	</aop:config>
	
	<!-- Advice를 자동으로 인식하게 하는 태그 -->
	<aop:aspectj-autoproxy />
	

	
	
</beans:beans>

