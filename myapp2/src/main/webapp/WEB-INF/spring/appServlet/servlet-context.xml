<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure 스프링 관련 설정들을 기술하는 xml 파일 -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<!-- 폴더를 다 뒤진 다음 어노테이션들을 읽어온 다음 그 어노테이션에 맞는 객체를 만들어올 수 있도록 명령 내리는 태그 @Controller, 
		@Service, @Repository에 있는 클래스들에 전부 객체를 만들고 서로 주입 <context:component-scan 
		base-package="com.kosa.mycompany" /> : com.kosa.mycompany 패키지 아래에 있는 모든 파일들을 
		뒤져라(범위 지정) -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<!-- resources 폴더들을 url과 매핑함 http://127.0.0.1:9000/myghome1/upload 실제 물리주소와 
		가상주소를 매핑하는 역할을 함 -->
	<!-- resources는 서버에 자체 내장된 데이터 폴더, upload는 업로드 작업을 거쳐 서버에 저장된 데이터 폴더 여기에 
		경로를 적어줘야 jsp에서 찾을 수 있다 -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/upload/**" location="/upload/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<!-- Controller와 jsp를 연동하는 역할(return "파일명") - 앞뒤로 확장자명이나 주소 같은거 붙여줘서 경로주소를 
		완성시킴 -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<context:component-scan
		base-package="com.kosa.mycompany" />

	<!-- 파일 업로드 객체 -->
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="20971520"></beans:property>
		<beans:property name="maxInMemorySize" value="10485760"></beans:property>
	</beans:bean>

	<!-- Advice를 자동 인식하게 만드는 태그 -->
	<aop:aspectj-autoproxy />


    <aop:config proxy-target-class="true">
		<aop:pointcut id="txAdvisePointCut" expression="execution(public * com.kosa.mycompany.*.*Service.*(..))"/>
		<aop:advisor id="transactionAdvisor" pointcut-ref="txAdvisePointCut" advice-ref="txAdvice"/>
	</aop:config>

</beans:beans>
